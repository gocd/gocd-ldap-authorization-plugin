/*
 * Copyright 2020 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: "https://raw.githubusercontent.com/gocd/gocd-plugin-gradle-task-helpers/master/helper.gradle?_=${(int) (new Date().toInstant().epochSecond / 60)}"
apply plugin: 'java'

group = 'com.thoughtworks.gocd'

gocdPlugin {
  id = 'com.thoughtworks.gocd.authorization.ldap'
  pluginVersion = '4.1.10'
  goCdVersion = '20.9.0'
  name = 'LDAP Authorization Plugin for GoCD'
  description = 'LDAP Authorization Plugin for GoCD'
  vendorName = 'ThoughtWorks, Inc.'
  vendorUrl = 'https://github.com/gocd/gocd-ldap-authorization-plugin'

  githubRepo {
    owner = System.getenv('GITHUB_USER') ?: 'bob'
    repo = 'gocd-ldap-authorization-plugin'
    token = System.getenv('GITHUB_TOKEN') ?: 'bad-token'
  }

  pluginProject = project
  prerelease = !"No".equalsIgnoreCase(System.getenv('PRERELEASE'))
  assetsToRelease = [project.tasks.findByName('jar')]
}

version = gocdPlugin.fullVersion(project)

repositories {
  jcenter()
  mavenLocal()
}

sourceSets {
  test {
    java {
      compileClasspath += configurations.compileOnly
      runtimeClasspath += configurations.compileOnly
    }
  }

  integrationTest {
    java.srcDirs = ['src/integration']
    resources.srcDirs += ['src/testdata']
    compileClasspath += main.output + configurations.compileOnly
    runtimeClasspath += main.output + configurations.compileOnly
  }
}

configurations {
  integrationTestImplementation.extendsFrom testImplementation
  integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
  compileOnly group: 'cd.go.plugin', name: 'go-plugin-api', version: '20.8.0'
  implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.0'
  implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
  implementation group: 'commons-io', name: 'commons-io', version: '2.5'
  implementation group: 'commons-codec', name: 'commons-codec', version: '1.10'

  implementation group: 'org.apache.directory.api', name: 'api-ldap-client-api', version: '1.0.0'
  implementation group: 'org.apache.directory.api', name: 'api-ldap-codec-standalone', version: '1.0.0'

  testImplementation group: 'junit', name: 'junit', version: '4.12'
  testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.22.0'
  testImplementation group: 'org.hamcrest', name: 'hamcrest-library', version: '1.3'
  testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
  testImplementation group: 'org.jsoup', name: 'jsoup', version: '1.10.2'
  testImplementation group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.16.1'

  integrationTestImplementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
  integrationTestImplementation group: 'org.apache.directory.server', name: 'apacheds-core', version: '2.0.0-M24'
  integrationTestImplementation group: 'org.apache.directory.server', name: 'apacheds-core-annotations', version: '2.0.0-M24'
  integrationTestImplementation group: 'org.apache.directory.server', name: 'apacheds-core-integ', version: '2.0.0-M24'
  integrationTestImplementation group: 'org.apache.directory.server', name: 'apacheds-core-jndi', version: '2.0.0-M24'
  integrationTestImplementation group: 'org.apache.directory.server', name: 'apacheds-core-constants', version: '2.0.0-M24'
}

task integrationTest(type: Test, description: 'Runs the ldap integration tests.') {
  testClassesDirs = sourceSets.integrationTest.output.classesDirs
  classpath = sourceSets.integrationTest.runtimeClasspath

  shouldRunAfter test
}

check.dependsOn integrationTest

jar {
  from(configurations.compileClasspath) {
    into "lib/"
  }
}
